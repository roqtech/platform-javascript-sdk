fragment File on FileModel {
  id
  createdAt
  updatedAt
  contentType
  createdByUserId
  fileCategoryId
  isPublic
  name
  status
  url
}

fragment FileAssociation on FileAssociationModel {
  id
  createdAt
  updatedAt
  entityReference
  entityName
  fileId
}

query files(
  $filter: FileFilterArgType
  $limit: Int
  $offset: Int
  $order: FileOrderArgType
  $search: FileSearchArgType
  $withCreatedByUser: Boolean = false
) {
  files(filter: $filter, limit: $limit, offset: $offset, order: $order, search: $search) {
    data {
      ...File
      createdByUser @include(if: $withCreatedByUser) {
        ...User
      }
    }
    totalCount
  }
}

query file(
  $id: ID!
  $withCreatedByUser: Boolean = false
) {
  file(id: $id) {
    ...File
    createdByUser @include(if: $withCreatedByUser) {
      ...User
    }
  }
}

mutation createFileAssociation($data: FileAssociationCreateDto!) {
  createFileAssociationV2(data: $data) {
    ...FileAssociation
  }
}

mutation createFileUpload($data: FileCreateV2Dto!) {
  createFileUploadV2(data: $data) {
    contentType
    createdAt
    createdByUserId
    fileCategoryId
    formFields
    id
    isPublic
    name
    status
    updatedAt
    uploadUrl
  }
}

mutation deleteFileAssociations($filter: FileAssociationBulkFilterArgType!) {
  deleteFileAssociations(filter: $filter)
}

mutation deleteFiles($filter: DeleteFilterArgType!) {
  deleteFiles(filter: $filter)
}

mutation makeFilePrivate($id: ID!) {
  makeFilePrivate(id: $id) {
    ...File
  }
}

mutation makeFilePublic($id: ID!) {
  makeFilePublic(id: $id) {
    ...File
  }
}

mutation updateFile($data: FileUpdateV2Dto!) {
  updateFileV2(data: $data) {
    ...File
  }
}

