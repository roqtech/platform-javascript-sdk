fragment Conversation on ConversationModel {
  id
  title
  active
  archived
  isGroup
  ownerId
  createdAt
  updatedAt
}

fragment Tag on ConversationTagModel {
  id
  conversationId
  tag
}

mutation createConversation($conversation: ConversationCreateDto!) {
  createConversation(conversation: $conversation) {
    ...Conversation
  }
}

mutation assignTagsToConversation($tags: [String!]!, $conversationId: ID!) {
  assignTagsToConversation(conversationId: $conversationId, tags: $tags)
}

mutation unassignTagsFromConversation($tags: [String!]!, $conversationId: ID!) {
  unassignTagsFromConversation(conversationId: $conversationId, tags: $tags)
}

mutation deleteConversation($id: ID!) {
  deleteConversation(id: $id)
}

mutation createMessage($message: MessageCreateDto!) {
  createMessage(message: $message)
}


fragment Message on MessageModel {
  id
  body
  conversationId
  fileId
  messageStatusId
  authorId
  createdAt
  updatedAt
}

fragment ConversationUser on ConversationUserModel {
  id
  conversationId
  createdAt
  updatedAt
}

fragment MessageStatus on MessageStatusModel {
  id
  messageId
  notified
  read
  createdAt
  updatedAt
}

query messages(
  $filter: MessageFilterArgType
  $limit: Int
  $offset: Int
  $order: MessageOrderArgType
  $search: MessageSearchArgType
  $withFile: Boolean = false
) {
  messages(
    filter: $filter
    limit: $limit
    offset: $offset
    order: $order
    search: $search
  ) {
    data {
      ...Message
      file @include(if: $withFile) {
        ...File
      }
    }
    totalCount
  }
}

query conversations(
  $filter: ConversationFilterArgType
  $limit: Int
  $offset: Int
  $order: ConversationOrderArgType
  $search: ConversationSearchArgType
  $withUsers: Boolean = false
  $withTags: Boolean = false
) {
  conversations(
    filter: $filter
    limit: $limit
    offset: $offset
    order: $order
    search: $search
  ) {
    data {
      ...Conversation
      users @include(if: $withUsers) {
        data {
          ...ConversationUser
        }
        totalCount
      }
      tags @include(if: $withTags) {
        data {
          ...Tag
        }
        totalCount
      }
    }
    totalCount
  }
}
